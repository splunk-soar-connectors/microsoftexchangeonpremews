{
    "appid": "badc5252-4a82-4a6d-bc53-d1e503857124",
    "name": "Microsoft Exchange On-Premise EWS",
    "description": "This app performs email ingestion, investigative and containment actions on an on-premise Exchange installation",
    "publisher": "Splunk",
    "type": "email",
    "main_module": "ewsonprem_connector.py",
    "app_version": "3.13.4",
    "latest_tested_versions": [
        "Exchange Server(on-prem) 2016"
    ],
    "utctime_updated": "2025-04-29T19:45:14.904893Z",
    "package_name": "phantom_ewsexchange",
    "product_vendor": "Microsoft",
    "product_name": "Exchange",
    "product_version_regex": ".*",
    "min_phantom_version": "6.2.1",
    "fips_compliant": false,
    "python_version": "3.9, 3.13",
    "logo": "logo_microsoft.svg",
    "logo_dark": "logo_microsoft_dark.svg",
    "license": "Copyright (c) 2016-2025 Splunk Inc.",
    "configuration": {
        "url": {
            "data_type": "string",
            "order": 0,
            "description": "EWS URL",
            "required": true,
            "default": "https://corp.contoso.com/EWS/Exchange.asmx"
        },
        "ph_0": {
            "data_type": "ph",
            "order": 1
        },
        "version": {
            "data_type": "string",
            "order": 2,
            "description": "EWS Version",
            "default": "2013",
            "value_list": [
                "2013",
                "2016"
            ]
        },
        "verify_server_cert": {
            "data_type": "boolean",
            "description": "Verify server certificate",
            "order": 3,
            "default": true
        },
        "username": {
            "data_type": "string",
            "order": 4,
            "description": "Username",
            "required": true
        },
        "password": {
            "data_type": "password",
            "order": 5,
            "description": "Password",
            "required": true
        },
        "poll_user": {
            "data_type": "string",
            "order": 6,
            "description": "User Email Mailbox (Test Connectivity and Poll)"
        },
        "use_impersonation": {
            "data_type": "boolean",
            "order": 7,
            "description": "Use Impersonation",
            "default": false
        },
        "poll_folder": {
            "data_type": "string",
            "description": "Mailbox folder to be polled",
            "order": 8,
            "required": true,
            "default": "Inbox"
        },
        "is_public_folder": {
            "data_type": "boolean",
            "description": "Mailbox folder is a public folder",
            "order": 9,
            "default": false
        },
        "first_run_max_emails": {
            "data_type": "numeric",
            "order": 10,
            "description": "Maximum emails to poll first time",
            "default": 2000,
            "required": true
        },
        "max_containers": {
            "data_type": "numeric",
            "description": "Maximum emails for scheduled polling",
            "order": 11,
            "default": 100,
            "required": true
        },
        "ingest_manner": {
            "data_type": "string",
            "description": "How to ingest",
            "required": true,
            "order": 12,
            "value_list": [
                "oldest first",
                "latest first"
            ],
            "default": "oldest first"
        },
        "container_severity": {
            "data_type": "string",
            "description": "Container Severity",
            "value_list": [
                "low",
                "medium",
                "high"
            ],
            "default": "medium",
            "order": 13
        },
        "ingest_time": {
            "data_type": "string",
            "description": "Sort mails by",
            "order": 14,
            "value_list": [
                "updated time",
                "created time"
            ],
            "default": "updated time"
        },
        "extract_attachments": {
            "data_type": "boolean",
            "description": "Extract Attachments",
            "order": 16,
            "default": true
        },
        "extract_urls": {
            "data_type": "boolean",
            "description": "Extract URLs",
            "order": 15,
            "default": true
        },
        "extract_ips": {
            "data_type": "boolean",
            "description": "Extract IPs",
            "order": 18,
            "default": true
        },
        "extract_domains": {
            "data_type": "boolean",
            "description": "Extract Domain Names",
            "order": 17,
            "default": true
        },
        "extract_hashes": {
            "data_type": "boolean",
            "description": "Extract Hashes",
            "order": 20,
            "default": true
        },
        "extract_email_addresses": {
            "data_type": "boolean",
            "description": "Extract Email Addresses",
            "order": 19,
            "default": true
        },
        "add_body_to_header_artifacts": {
            "data_type": "boolean",
            "description": "Add email body to the Email Artifact",
            "order": 22,
            "default": false
        },
        "extract_root_email_as_vault": {
            "data_type": "boolean",
            "description": "Extract root (primary) email as Vault",
            "order": 23,
            "default": true
        },
        "save_raw_email_to_container": {
            "data_type": "boolean",
            "description": "Save raw email to container data dictionary",
            "order": 25,
            "default": true
        },
        "preprocess_script": {
            "data_type": "file",
            "description": "Script with functions to preprocess containers and artifacts",
            "order": 21
        },
        "automation_on_duplicate": {
            "data_type": "boolean",
            "description": "Run automation on duplicate event",
            "default": true,
            "order": 24
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "description": "Validate the asset configuration for connectivity using supplied configuration",
            "type": "test",
            "identifier": "test_asset_connectivity",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "run query",
            "description": "Search emails",
            "type": "investigate",
            "identifier": "run_query",
            "read_only": true,
            "verbose": "The <b>run query</b> action provides more than one method to search a user's mailbox:<br><ul><li>Simple Search<br>Use the <b>subject</b> and <b>body</b> parameters to search for substring matches. The <b>sender</b> parameter can be used to search for emails from a specific address. However it has been noticed that a match with the <b>sender</b> email address fails for emails that have been never sent or received, but instead have been created manually as a draft and copied to the searched mailbox. In such cases an AQS is a better option. If more than one parameter is specified, the search is an <b>And</b> of the given values including the <b>internet_message_id</b>.<br> <b>Simple Search</b> implements search filters. More details regarding search filters can be found on this <a href=\"https://msdn.microsoft.com/en-us/library/office/dn579422(v=exchg.150).aspx\">MSDN Link</a>.<br></li><li>Query Search<br>For a more fine-grained email search, the use of the <b>query</b> parameter is recommended. If this parameter is specified, the <b>subject</b>, <b>sender</b>, <b>internet_message_id</b> and <b>body</b> parameters are ignored.<br>This parameter supports AQS queries to search in a Mailbox. More details regarding AQS keywords supported by Exchange can be found on this <a href=\"https://msdn.microsoft.com/en-us/library/office/dn579420(v=exchg.150).aspx\">MSDN Link.</a><br>Searching with AQS strings does have one notable restriction, however. The AQS search string will only match substrings from the start of a word. If a substring needs to be found in the middle of a word, use a <b>Simple Search</b>.<br>Some examples:<br><ul><li>All emails from user1@contoso.com or user2@contoso.com<br>from:user1@contoso.com OR from:user2@contoso.com</li><li>All emails containing the string <i>free vacations</i><br>body: free vacations</li><li>This will match an email with subject containing the word <i>Details</i> but not <i>Cadet</i><br>subject:det</li></li></ul></ul>If the <b>folder</b> parameter is not specified, each email based folder such as Inbox, Sent etc. will be searched, including the children (nested) folders.<br>The action supports searching a folder that is nested within another.<br>To search in such a folder, specify the complete path using the <b>'/'</b> (forward slash) as the separator.<br>For e.g. to search in a folder named <i>phishing</i> which is nested within (a child of) <i>Inbox</i>, set the value as <b>Inbox/phishing</b>.<br>NOTE: In some cases search results may return more emails than are visible in an email client. This is due to emails that have been just deleted, but not yet completely cleaned by the server.<br><br>The action supports limiting the number of emails returned using the <b>range</b> parameter. The input should be of the form <i>min_offset</i>-<i>max_offset</i>. The results are always sorted in <i>descending</i> order to place the latest emails at the top. For example to get the latest 10 emails that matched the filter, specify the range as 0-9. If multiple folders are searched for, then the range will be applied for each folder.<br>So if the folder being searched for example <i>Inbox</i> has a child (nested) folder called <i>phishing</i> and the range specified is 2-10, then the action will return 9 max emails for each folder. If the range parameter is not specified by default the action will use <b>0-10</b>.<br><br>NOTE: The <b>email</b> parameter is required.<br><br>Many actions such as <b>delete email</b> and <b>copy email</b> require the <b>exchange email ID</b> as input. Many times this value is not easily available, since not many email clients display it. However every email header has a value called <b>Message-ID</b> assigned to it. It's usually something like &lt;tS10Ncty2SyeJsjdNMsxV+dguQ+jd7RwiFgmZsLN@contoso.com&gt;. Use this as the value (including the &lt; and &gt; chars if present) of <b>internet_message_id</b> parameter and execute the action. The results will contain the <b>exchange email ID</b> of an email, which can be used as input for other actions.",
            "parameters": {
                "email": {
                    "description": "User's Email (Mailbox to search in)",
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "email"
                    ],
                    "primary": true,
                    "required": true
                },
                "folder": {
                    "description": "Folder Name/Path (to search in)",
                    "data_type": "string",
                    "order": 1,
                    "default": "Inbox",
                    "contains": [
                        "mail folder",
                        "mail folder path"
                    ],
                    "primary": true
                },
                "subject": {
                    "description": "Substring to search in Subject",
                    "data_type": "string",
                    "order": 2
                },
                "sender": {
                    "description": "Sender Email address to match",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ],
                    "order": 3,
                    "primary": true
                },
                "body": {
                    "description": "Substring to search in Body",
                    "data_type": "string",
                    "order": 4
                },
                "internet_message_id": {
                    "description": "Internet Message ID",
                    "data_type": "string",
                    "order": 5,
                    "primary": true,
                    "contains": [
                        "internet message id"
                    ]
                },
                "query": {
                    "description": "AQS string",
                    "data_type": "string",
                    "order": 6
                },
                "range": {
                    "description": "Email range to return (min_offset-max_offset)",
                    "data_type": "string",
                    "order": 7,
                    "default": "0-10"
                },
                "ignore_subfolders": {
                    "description": "Ignore subfolders",
                    "data_type": "boolean",
                    "order": 8
                },
                "is_public_folder": {
                    "description": "Mailbox folder is a public folder",
                    "data_type": "boolean",
                    "order": 9,
                    "default": false
                }
            },
            "render": {
                "width": 12,
                "title": "Run Query",
                "type": "table",
                "height": 5
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.body",
                    "data_type": "string",
                    "example_values": [
                        "Test body"
                    ]
                },
                {
                    "data_path": "action_result.parameter.email",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ],
                    "example_values": [
                        "test@sample.com"
                    ]
                },
                {
                    "data_path": "action_result.parameter.folder",
                    "data_type": "string",
                    "contains": [
                        "mail folder",
                        "mail folder path"
                    ],
                    "example_values": [
                        "Inbox"
                    ]
                },
                {
                    "data_path": "action_result.parameter.ignore_subfolders",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.internet_message_id",
                    "data_type": "string",
                    "contains": [
                        "internet message id"
                    ],
                    "example_values": [
                        "AAMkAGIyMTUxYTkzLWRjYjctNDFjMi04NTAxLTQzMDFkNDhlZmI5MQBGAAAAAACxQSnX8n2GS4cunBIQ2sV7BwCQhMsoV7EYSJF42ChR9SCxAAAAYCbsAACQhMsoV7EYSJF42ChR9SCxAAAAjh8bAAA="
                    ]
                },
                {
                    "data_path": "action_result.parameter.is_public_folder",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.query",
                    "data_type": "string",
                    "example_values": [
                        "Subject: test subject"
                    ]
                },
                {
                    "data_path": "action_result.parameter.range",
                    "data_type": "string",
                    "example_values": [
                        "0-10"
                    ]
                },
                {
                    "data_path": "action_result.parameter.sender",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ],
                    "example_values": [
                        "test@sample.com"
                    ]
                },
                {
                    "data_path": "action_result.parameter.subject",
                    "data_type": "string",
                    "example_values": [
                        "Important updates"
                    ]
                },
                {
                    "data_path": "action_result.data.*.folder",
                    "data_type": "string",
                    "column_name": "Folder",
                    "contains": [
                        "mail folder"
                    ],
                    "column_order": 3,
                    "example_values": [
                        "Inbox"
                    ]
                },
                {
                    "data_path": "action_result.data.*.folder_path",
                    "data_type": "string",
                    "column_name": "Folder Path",
                    "contains": [
                        "mail folder path"
                    ],
                    "column_order": 4
                },
                {
                    "data_path": "action_result.data.*.t_DateTimeReceived",
                    "data_type": "string",
                    "column_name": "Received Time",
                    "column_order": 2,
                    "example_values": [
                        "2017-10-03T21:31:05Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_From.t_Mailbox.t_EmailAddress",
                    "data_type": "string",
                    "example_values": [
                        "test@sample.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_From.t_Mailbox.t_MailboxType",
                    "data_type": "string",
                    "example_values": [
                        "OneOff"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_From.t_Mailbox.t_Name",
                    "data_type": "string",
                    "contains": [
                        "user name"
                    ],
                    "example_values": [
                        "Test"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_From.t_Mailbox.t_RoutingType",
                    "data_type": "string",
                    "example_values": [
                        "EX"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_InternetMessageId",
                    "data_type": "string",
                    "column_name": "Internet Message ID",
                    "column_order": 5,
                    "contains": [
                        "internet message id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_ItemId.@ChangeKey",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_ItemId.@Id",
                    "data_type": "string",
                    "contains": [
                        "exchange email id"
                    ],
                    "column_name": "Message ID",
                    "column_order": 6
                },
                {
                    "data_path": "action_result.data.*.t_Sender.t_Mailbox.t_EmailAddress",
                    "data_type": "string",
                    "example_values": [
                        "test@sample.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Sender.t_Mailbox.t_MailboxType",
                    "data_type": "string",
                    "example_values": [
                        "OneOff"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Sender.t_Mailbox.t_Name",
                    "data_type": "string",
                    "contains": [
                        "user name"
                    ],
                    "column_name": "Sender",
                    "column_order": 1,
                    "example_values": [
                        "Test"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Sender.t_Mailbox.t_RoutingType",
                    "data_type": "string",
                    "example_values": [
                        "EX"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Subject",
                    "data_type": "string",
                    "column_name": "Subject",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.summary.emails_matched",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Emails matched: 1"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "delete email",
            "description": "Delete emails",
            "verbose": "This action supports a comma separated list of message IDs as input. This results in multiple emails getting deleted in a single call to the server. If impersonation is enabled on the asset, the <b>email</b> parameter is required, else <b>email</b> will be ignored.<br>The action requires the exchange email ID as input. Many times this value is not easily available, since not many email clients display it. However every email header has a value called <b>Message-ID</b> assigned to it. It's usually something like &lt;tS10Ncty2SyeJsjdNMsxV+dguQ+jd7RwiFgmZsLN@contoso.com&gt;. Use this <b>Internet Message ID</b> as input to the <b>run query</b> action to get the <b>exchange email ID</b> of an email.",
            "type": "contain",
            "identifier": "delete_email",
            "read_only": false,
            "parameters": {
                "id": {
                    "description": "Message IDs to delete (comma separated values supported)",
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "exchange email id"
                    ],
                    "primary": true,
                    "required": true
                },
                "email": {
                    "description": "Email of the mailbox owner (used during impersonation)",
                    "data_type": "string",
                    "order": 1,
                    "contains": [
                        "email"
                    ],
                    "primary": true
                }
            },
            "render": {
                "width": 12,
                "title": "Delete Email",
                "type": "table",
                "height": 5
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.email",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ],
                    "example_values": [
                        "test@sample.com"
                    ]
                },
                {
                    "data_path": "action_result.parameter.id",
                    "data_type": "string",
                    "contains": [
                        "exchange email id"
                    ],
                    "column_name": "Message ID",
                    "column_order": 0,
                    "example_values": [
                        "AAMkAGIyMTUxYTkzLWRjYjctNDFjMi04NTAxLTQzMDFkNDhlZmI5MQBGAAAAAACxQSnX8n2GS4cunBIQ2sV7BwCQhMsoV7EYSJF42ChR9SCxAAAAYCbsAACQhMsoV7EYSJF42ChR9SCxAAAAjh8bAAA="
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "column_name": "Status Message",
                    "column_order": 1,
                    "example_values": [
                        "Email deleted"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "copy email",
            "description": "Copy an email to a folder",
            "verbose": "The action supports copying to a folder that is nested within another.<br>To copy to such a folder, specify the complete path using the <b>'/'</b> (forward slash) as the separator.<br>For example, to copy email to a folder named <i>phishing</i> which is nested within <i>Inbox</i>, set the value as <b>Inbox/phishing</b>.<br>The action requires the exchange email ID as input. Many times this value is not easily available, since not many email clients display it. However every email header has a value called <b>Message-ID</b> assigned to it. It's usually something like &lt;tS10Ncty2SyeJsjdNMsxV+dguQ+jd7RwiFgmZsLN@contoso.com&gt;. Use this <b>Internet Message ID</b> as input to the <b>run query</b> action to get the <b>exchange email ID</b> of an email.<br>The action will return the ID of the newly copied email in the data path <b>action_result.data.*.new_email_id</b>, however this value is not available for cross-mailbox or mailbox to public folder <b>copy email</b> actions (please see the documentation of the <a href=\"https://msdn.microsoft.com/en-us/library/office/aa565012(v=exchg.150).aspx\">CopyItem operation on MSDN</a>). However in such scenarios, do a <b>run query</b> on the new mailbox plus folder with a specific parameter like <b>Internet Message ID</b> to get the <b>Exchange email ID</b>.<br><br><b>Impersonation</b><p>Impersonation plays a big role in the <b>copy email</b> action, for reasons explained in this section, <b>copy email</b> is the only action that overrides the asset config parameter <b>use_impersonation</b>. By default, the action will <i>impersonate</i> the user specified in the <b>email</b> parameter, if impersonation is enabled (by setting the <b>dont_impersonate</b> action parameter to False or Unchecked).<br>However depending on the server configuration, this action might fail with an <i>Access Denied</i> error. If an email is being copied from one folder to another in the same mailbox, the action will succeed, however if the email is being copied from one mailbox's folder to a different mailbox, the impersonated user will require access to both the mailboxes. In this case the action might require to impersonate a user other than the one specified in the <b>email</b> parameter. In such a scenario use the <b>impersonate_email</b> to specify an alternate email to <i>impersonate</i>.<br>Set the <b>dont_impersonate</b> parameter to <b>True</b> to disable impersonation all together. This value will override the one configured on the asset. The default value of this param is <b>False</b>.</p>",
            "type": "generic",
            "identifier": "copy_email",
            "read_only": false,
            "parameters": {
                "id": {
                    "description": "Message ID to copy",
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "exchange email id"
                    ],
                    "primary": true,
                    "required": true
                },
                "ph": {
                    "data_type": "ph",
                    "order": 1
                },
                "email": {
                    "description": "Destination Mailbox (Email)",
                    "data_type": "string",
                    "order": 2,
                    "contains": [
                        "email"
                    ],
                    "primary": true,
                    "required": true
                },
                "folder": {
                    "description": "Destination Mail Folder Name/Path",
                    "data_type": "string",
                    "order": 3,
                    "primary": true,
                    "required": true,
                    "contains": [
                        "mail folder",
                        "mail folder path"
                    ]
                },
                "impersonate_email": {
                    "description": "Impersonation Email",
                    "data_type": "string",
                    "order": 4,
                    "primary": true,
                    "contains": [
                        "email"
                    ]
                },
                "dont_impersonate": {
                    "description": "Don't use impersonation",
                    "data_type": "boolean",
                    "order": 5,
                    "default": false
                },
                "is_public_folder": {
                    "description": "Mailbox folder is a public folder",
                    "data_type": "boolean",
                    "order": 6,
                    "default": false
                }
            },
            "render": {
                "width": 12,
                "title": "Copy Email",
                "type": "table",
                "height": 5
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.dont_impersonate",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.email",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ],
                    "column_name": "User Email",
                    "column_order": 0,
                    "example_values": [
                        "test@sample.com"
                    ]
                },
                {
                    "data_path": "action_result.parameter.folder",
                    "data_type": "string",
                    "column_name": "Folder",
                    "contains": [
                        "mail folder",
                        "mail folder path"
                    ],
                    "column_order": 1,
                    "example_values": [
                        "Inbox"
                    ]
                },
                {
                    "data_path": "action_result.parameter.id",
                    "data_type": "string",
                    "contains": [
                        "exchange email id"
                    ],
                    "column_name": "Source Message ID",
                    "column_order": 2,
                    "example_values": [
                        "AAMkAGIyMTUxYTkzLWRjYjctNDFjMi04NTAxLTQzMDFkNDhlZmI5MQBGAAAAAACxQSnX8n2GS4cunBIQ2sV7BwCQhMsoV7EYSJF42ChR9SCxAAAAYCbsAACQhMsoV7EYSJF42ChR9SCxAAAAjh8bAAA="
                    ]
                },
                {
                    "data_path": "action_result.parameter.impersonate_email",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ],
                    "example_values": [
                        "test@sample.com"
                    ]
                },
                {
                    "data_path": "action_result.parameter.is_public_folder",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.data.*.new_email_id",
                    "data_type": "string",
                    "contains": [
                        "exchange email id"
                    ],
                    "column_name": "Destination Message ID",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "column_name": "Status Message",
                    "column_order": 4,
                    "example_values": [
                        "Email copied"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "action_result.parameter.ph",
                    "data_type": "ph"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "move email",
            "description": "Move an email to a folder",
            "verbose": "The action supports moving an email to a folder that is nested within another.<br>To move to such a folder, specify the complete path using the <b>'/'</b> (forward slash) as the separator.<br>For example, to move email to a folder named <i>phishing</i> which is nested within <i>Inbox</i>, set the value as <b>Inbox/phishing</b>.<br>The action requires the exchange email ID as input. Many times this value is not easily available, since not many email clients display it. However every email header has a value called <b>Message-ID</b> assigned to it. It's usually something like &lt;tS10Ncty2SyeJsjdNMsxV+dguQ+jd7RwiFgmZsLN@contoso.com&gt;. Use this <b>Internet Message ID</b> as input to the <b>run query</b> action to get the <b>exchange email ID</b> of an email.<br>The action will return the ID of the newly copied email in the data path <b>action_result.data.*.new_email_id</b>, however this value is not available for cross-mailbox or mailbox to public folder <b>move email</b> actions (please see the documentation of the <a href=\"https://msdn.microsoft.com/en-us/library/office/aa565012(v=exchg.150).aspx\">MoveItem operation on MSDN</a>). However in such scenarios, do a <b>run query</b> on the new mailbox plus folder with a specific parameter like <b>Internet Message ID</b> to get the <b>Exchange email ID</b>.<br><br><b>Impersonation</b><p>Impersonation plays a big role in the <b>move email</b> action, for reasons explained in this section, <b>move email</b> is the only action that overrides the asset config parameter <b>use_impersonation</b>. By default, the action will <i>impersonate</i> the user specified in the <b>email</b> parameter, if impersonation is enabled (by setting the <b>dont_impersonate</b> action parameter to False or Unchecked).<br>However depending on the server configuration, this action might fail with an <i>Access Denied</i> error. If an email is being copied from one folder to another in the same mailbox, the action will succeed, however if the email is being copied from one mailbox's folder to a different mailbox, the impersonated user will require access to both the mailboxes. In this case the action might require to impersonate a user other than the one specified in the <b>email</b> parameter. In such a scenario use the <b>impersonate_email</b> to specify an alternate email to <i>impersonate</i>.<br>Set the <b>dont_impersonate</b> parameter to <b>True</b> to disable impersonation all together. This value will override the one configured on the asset. The default value of this param is <b>False</b>.</p>",
            "type": "generic",
            "identifier": "move_email",
            "read_only": false,
            "parameters": {
                "id": {
                    "description": "Message ID to move",
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "exchange email id"
                    ],
                    "primary": true,
                    "required": true
                },
                "ph": {
                    "data_type": "ph",
                    "order": 1
                },
                "email": {
                    "description": "Destination Mailbox (Email)",
                    "data_type": "string",
                    "order": 2,
                    "contains": [
                        "email"
                    ],
                    "primary": true,
                    "required": true
                },
                "folder": {
                    "description": "Destination Mail Folder Name/Path",
                    "data_type": "string",
                    "order": 3,
                    "primary": true,
                    "required": true,
                    "contains": [
                        "mail folder",
                        "mail folder path"
                    ]
                },
                "impersonate_email": {
                    "description": "Impersonation Email",
                    "data_type": "string",
                    "order": 4,
                    "primary": true,
                    "contains": [
                        "email"
                    ]
                },
                "dont_impersonate": {
                    "description": "Don't use impersonation",
                    "data_type": "boolean",
                    "order": 5,
                    "default": false
                },
                "is_public_folder": {
                    "description": "Mailbox folder is a public folder",
                    "data_type": "boolean",
                    "order": 6,
                    "default": false
                }
            },
            "render": {
                "width": 12,
                "title": "Move Email",
                "type": "table",
                "height": 5
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.dont_impersonate",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.email",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ],
                    "column_name": "User Email",
                    "column_order": 0,
                    "example_values": [
                        "test@sample.com"
                    ]
                },
                {
                    "data_path": "action_result.parameter.folder",
                    "data_type": "string",
                    "column_name": "Folder",
                    "contains": [
                        "mail folder",
                        "mail folder path"
                    ],
                    "column_order": 1,
                    "example_values": [
                        "Inbox"
                    ]
                },
                {
                    "data_path": "action_result.parameter.id",
                    "data_type": "string",
                    "contains": [
                        "exchange email id"
                    ],
                    "column_name": "Source Message ID",
                    "column_order": 2,
                    "example_values": [
                        "AAMkAGIyMTUxYTkzLWRjYjctNDFjMi04NTAxLTQzMDFkNDhlZmI5MQBGAAAAAACxQSnX8n2GS4cunBIQ2sV7BwCQhMsoV7EYSJF42ChR9SCxAAAAYCbsAACQhMsoV7EYSJF42ChR9SCxAAAAjh8bAAA="
                    ]
                },
                {
                    "data_path": "action_result.parameter.impersonate_email",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ],
                    "example_values": [
                        "test@sample.com"
                    ]
                },
                {
                    "data_path": "action_result.parameter.is_public_folder",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.data.*.new_email_id",
                    "data_type": "string",
                    "contains": [
                        "exchange email id"
                    ],
                    "column_name": "Destination Message ID",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "column_name": "Status Message",
                    "column_order": 4,
                    "example_values": [
                        "Email moved"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "action_result.parameter.ph",
                    "data_type": "ph"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "get email",
            "description": "Get an email from the server",
            "verbose": "Every container that is created by the app has the following values:<ul><li>The container ID that is generated by the Splunk SOAR platform.</li><li>The Source ID that the app equates to the email ID on the server if known or the vault ID if asked to parse from the vault.</li><li>If the asset configuration parameter \"Save raw email to container data dictionary\" is checked, then the raw_email data in the container's data field is set to the RFC822 format of the email.</li></ul>This action parses email data and if specified creates containers and artifacts. The email data to parse is either extracted from the remote server if an email ID is specified, from a Splunk SOAR container, if the <b>container_id</b> is specified or from the vault item if the <b>vault_id</b> is specified.<br>If all three parameters are specified, the action will use the <b>container_id</b>.<br>The data paths differ depending on where the email data is parsed from.<br><br><p>If parsed from the server:<br><ul><li>The data path <b>action_result.data.*.t_MimeContent.#text</b> contains the email in RFC822 format, but base64 encoded.</li><li>The data path <b>action_result.data.*.t_Body.#text</b> contains the email body.</li><li>The widget for this action will render a text version of the email body if possible.</li><li>If impersonation is enabled on the asset, the <b>email</b> parameter is required, else <b>email</b> will be ignored.</li></ul></p><p>If parsed from the container or vault:<br><ul><li>The widget does not render the email body.</li><li>The email headers are listed in a table.</li></ul></p><p>If <b>ingest_email</b> is set to </b>True</b>:<br><ul><li>The ID of the container created or updated will be set in the <b>action_result.summary.container_id</b> data path.</li><li>The widget will display this ID as <b>Ingested Container ID</b>.</li></ul></p>Do note that any containers and artifacts created will use the label configured in the asset.<br>The action will fail if the vault item asked to parse and ingest is not an email item (.eml).",
            "type": "investigate",
            "identifier": "get_email",
            "read_only": true,
            "parameters": {
                "id": {
                    "description": "Message ID to get",
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "exchange email id"
                    ],
                    "primary": true
                },
                "email": {
                    "description": "Email of the mailbox owner (used during impersonation)",
                    "data_type": "string",
                    "order": 1,
                    "contains": [
                        "email"
                    ],
                    "primary": true
                },
                "container_id": {
                    "description": "Container ID to get email data from",
                    "data_type": "numeric",
                    "order": 2,
                    "contains": [
                        "phantom container id"
                    ],
                    "primary": true
                },
                "vault_id": {
                    "description": "Vault ID to get email from",
                    "data_type": "string",
                    "order": 3,
                    "contains": [
                        "vault id"
                    ],
                    "primary": true
                },
                "ingest_email": {
                    "description": "Create containers and artifacts",
                    "data_type": "boolean",
                    "order": 4,
                    "default": false
                },
                "use_current_container": {
                    "description": "Create artifacts in the same container",
                    "data_type": "boolean",
                    "order": 5,
                    "default": false
                }
            },
            "render": {
                "width": 12,
                "title": "Get Email",
                "type": "custom",
                "view": "ewsonprem_view.display_email",
                "height": 5
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.container_id",
                    "data_type": "numeric",
                    "contains": [
                        "phantom container id"
                    ],
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "action_result.parameter.email",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ],
                    "example_values": [
                        "test@sample.com"
                    ]
                },
                {
                    "data_path": "action_result.parameter.id",
                    "data_type": "string",
                    "contains": [
                        "exchange email id"
                    ],
                    "column_name": "Email ID",
                    "column_order": 3,
                    "example_values": [
                        "AAMkADMzMGJmYzM0LThjZjYtNDQzMC04ZjNhLWNkYzYwYmViZDU2ZABGAAAAAAAYish+ZMlDQ6wcIrPHA5WYBwAcmY5GSia4RK5DAQM4jsrZAAAAAAEMAAAcmY5GSia4RK5DAQM4jsrZAADYNGhYAAABEgAQAAwVWunyyNdLvvCK9O44tTk="
                    ]
                },
                {
                    "data_path": "action_result.parameter.ingest_email",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.use_current_container",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.vault_id",
                    "data_type": "string",
                    "contains": [
                        "vault id"
                    ],
                    "example_values": [
                        "85735b9d35c6eccf3ee80f45648b9f7df613703c"
                    ]
                },
                {
                    "data_path": "action_result.data.*.CC",
                    "data_type": "string",
                    "example_values": [
                        "Test <test@sample.com>"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Content-Language",
                    "data_type": "string",
                    "example_values": [
                        "en-US"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Content-Type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.Date",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.Delivered-To",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.From",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.Importance",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.MIME-Version",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.Mail-Filter-Gateway",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.Message-ID",
                    "data_type": "string",
                    "contains": [
                        "internet message id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Received",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.Return-Path",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.Sender",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.Subject",
                    "data_type": "string",
                    "example_values": [
                        "Test subject"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Thread-Index",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.Thread-Topic",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.To",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.X-Account-Key",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.X-CTCH-RefID",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.X-MS-Exchange-Organization-RecordReviewCfmType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.X-MS-Exchange-Organization-SCL",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.X-MS-Has-Attach",
                    "data_type": "string",
                    "example_values": [
                        "yes"
                    ]
                },
                {
                    "data_path": "action_result.data.*.X-MS-TNEF-Correlator",
                    "data_type": "string"
                },
                {
                    "contains": [
                        "email"
                    ],
                    "data_path": "action_result.data.*.X-Mail-Filter-Gateway-From",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.X-Mail-Filter-Gateway-ID",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.X-Mail-Filter-Gateway-SpamDetectionEngine",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.X-Mail-Filter-Gateway-SpamScore",
                    "data_type": "string"
                },
                {
                    "contains": [
                        "email"
                    ],
                    "data_path": "action_result.data.*.X-Mail-Filter-Gateway-To",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.X-Mailer",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.X-MimeOLE",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.X-Mozilla-Keys",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.X-Priority",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.X-SOHU-Antispam-Bayes",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.X-SOHU-Antispam-Language",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.X-Spam-Status",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.X-UIDL",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.decodedBCC",
                    "data_type": "string",
                    "example_values": [
                        "test_user <test_user@e2016.local>"
                    ]
                },
                {
                    "data_path": "action_result.data.*.decodedCC",
                    "data_type": "string",
                    "example_values": [
                        "test_user <test_user@e2016.local>"
                    ]
                },
                {
                    "data_path": "action_result.data.*.decodedFrom",
                    "data_type": "string",
                    "example_values": [
                        "test_user <test_user@e2016.local>"
                    ]
                },
                {
                    "data_path": "action_result.data.*.decodedSubject",
                    "data_type": "string",
                    "example_values": [
                        "test subject"
                    ]
                },
                {
                    "data_path": "action_result.data.*.decodedTo",
                    "data_type": "string",
                    "example_values": [
                        "test_user <test_user@e2016.local>"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_AdjacentMeetingCount",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_AssociatedCalendarItemId.@ChangeKey",
                    "data_type": "string",
                    "example_values": [
                        "DwAAABYAAAAcmY5GSia4RK5DAQM4jsrZAAF/yWMW"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_AssociatedCalendarItemId.@Id",
                    "data_type": "string",
                    "example_values": [
                        "AAMkADMzMGJmYzM0LThjZjYtNDQzMC04ZjNhLWNkYzYwYmViZDU2ZABGAAAAAAAYish+ZMlDQ6wcIrPHA5WYBwAcmY5GSia4RK5DAQM4jsrZAAAAAAENAAAcmY5GSia4RK5DAQM4jsrZAAF/xerCAAA="
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_FileAttachment.*.t_AttachmentId.@Id",
                    "data_type": "string",
                    "example_values": [
                        "AAMkADMzMGJmYzM0LThjZjYtNDQzMC04ZjNhLWNkYzYwYmViZDU2ZABGAAAAAAAYish+ZMlDQ6wcIrPHA5WYBwAcmY5GSia4RK5DAQM4jsrZAAAAAAEMAAAcmY5GSia4RK5DAQM4jsrZAADYNGhXAAABEgAQAFAEZruSqddCnoHkoKpp2Fw="
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_FileAttachment.*.t_ContentId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_FileAttachment.*.t_ContentType",
                    "data_type": "string",
                    "example_values": [
                        "text/rtf"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_FileAttachment.*.t_IsContactPhoto",
                    "data_type": "string",
                    "example_values": [
                        "false"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_FileAttachment.*.t_IsInline",
                    "data_type": "string",
                    "example_values": [
                        "false"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_FileAttachment.*.t_LastModifiedTime",
                    "data_type": "string",
                    "example_values": [
                        "2019-03-03T10:25:14"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_FileAttachment.*.t_Name",
                    "data_type": "string",
                    "contains": [
                        "user name"
                    ],
                    "example_values": [
                        "test_filename"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_FileAttachment.*.t_Size",
                    "data_type": "string",
                    "example_values": [
                        "577"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_FileAttachment.t_AttachmentId.@Id",
                    "data_type": "string",
                    "example_values": [
                        "AAMkADMzMGJmYzM0LThjZjYtNDQzMC04ZjNhLWNkYzYwYmViZDU2ZABGAAAAAAAYish+ZMlDQ6wcIrPHA5WYBwAcmY5GSia4RK5DAQM4jsrZAAAAAAEMAAAcmY5GSia4RK5DAQM4jsrZAADYNGhYAAABEgAQAAwVWunyyNdLvvCK9O44tTk="
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_FileAttachment.t_ContentId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_FileAttachment.t_ContentType",
                    "data_type": "string",
                    "example_values": [
                        "text/rtf"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_FileAttachment.t_IsContactPhoto",
                    "data_type": "string",
                    "example_values": [
                        "false"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_FileAttachment.t_IsInline",
                    "data_type": "string",
                    "example_values": [
                        "false"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_FileAttachment.t_LastModifiedTime",
                    "data_type": "string",
                    "example_values": [
                        "2019-03-03T11:20:20"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_FileAttachment.t_Name",
                    "data_type": "string",
                    "contains": [
                        "user name"
                    ],
                    "example_values": [
                        "test_filename"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_FileAttachment.t_Size",
                    "data_type": "string",
                    "example_values": [
                        "686"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_ItemAttachment.*.t_AttachmentId.@Id",
                    "data_type": "string",
                    "example_values": [
                        "AAMkADMzMGJmYzM0LThjZjYtNDQzMC04ZjNhLWNkYzYwYmViZDU2ZABGAAAAAAAYish+ZMlDQ6wcIrPHA5WYBwAcmY5GSia4RK5DAQM4jsrZAAF/xJHpAAAcmY5GSia4RK5DAQM4jsrZAAGp8gueAAABEgAQANfKOfHITtpGoin5+WHGFes="
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_ItemAttachment.*.t_IsInline",
                    "data_type": "string",
                    "example_values": [
                        "false"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_ItemAttachment.*.t_LastModifiedTime",
                    "data_type": "string",
                    "example_values": [
                        "2021-12-06T10:16:41"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_ItemAttachment.*.t_Name",
                    "data_type": "string",
                    "example_values": [
                        "Project discussion"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_ItemAttachment.*.t_Size",
                    "data_type": "string",
                    "example_values": [
                        "10944"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_ItemAttachment.t_AttachmentId.@Id",
                    "data_type": "string",
                    "example_values": [
                        "AAMkADdjMTIzMWQ3LTZjNWMtNDY1YS05NWQxLTNjYWEyZmQ3YzM1NABGAAAAAAAJSwjkHb8oQah/TEDLmhZUBwAkoMp0B6/1Tp1ZFVDIcuRVAAAAQCMBAAAkoMp0B6/1Tp1ZFVDIcuRVAAABk685AAABBgAEAAAAAAA="
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_ItemAttachment.t_ContentId",
                    "data_type": "string",
                    "example_values": [
                        "055B64DA80B87347B158187A516CB65A@sample.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_ItemAttachment.t_ContentType",
                    "data_type": "string",
                    "example_values": [
                        "message/rfc822"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_ItemAttachment.t_IsInline",
                    "data_type": "string",
                    "example_values": [
                        "false"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_ItemAttachment.t_LastModifiedTime",
                    "data_type": "string",
                    "example_values": [
                        "2020-06-03T12:33:51"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_ItemAttachment.t_Name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_ItemAttachment.t_Size",
                    "data_type": "string",
                    "example_values": [
                        "923"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Body.#text",
                    "data_type": "string",
                    "example_values": [
                        "Test body."
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Body.@BodyType",
                    "data_type": "string",
                    "example_values": [
                        "Text"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Body.@IsTruncated",
                    "data_type": "string",
                    "example_values": [
                        "false"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Categories.t_String",
                    "data_type": "string",
                    "example_values": [
                        "Processing"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_CcRecipients.t_Mailbox.t_EmailAddress",
                    "data_type": "string",
                    "example_values": [
                        "user1@e2016.local"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_CcRecipients.t_Mailbox.t_MailboxType",
                    "data_type": "string",
                    "example_values": [
                        "Mailbox"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_CcRecipients.t_Mailbox.t_Name",
                    "data_type": "string",
                    "example_values": [
                        "user1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_CcRecipients.t_Mailbox.t_RoutingType",
                    "data_type": "string",
                    "example_values": [
                        "SMTP"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_ConflictingMeetingCount",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_DateTimeCreated",
                    "data_type": "string",
                    "example_values": [
                        "2017-10-03T21:31:05Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_DateTimeReceived",
                    "data_type": "string",
                    "example_values": [
                        "2017-10-03T21:31:05Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_DateTimeSent",
                    "data_type": "string",
                    "example_values": [
                        "2017-10-03T21:31:05Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_End",
                    "data_type": "string",
                    "example_values": [
                        "2021-11-27T16:30:00Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_ExtendedProperty.*.t_ExtendedFieldURI.@PropertyTag",
                    "data_type": "string",
                    "example_values": [
                        "0x7d"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_ExtendedProperty.*.t_ExtendedFieldURI.@PropertyType",
                    "data_type": "string",
                    "example_values": [
                        "String"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_ExtendedProperty.*.t_Value",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_ExtendedProperty.t_ExtendedFieldURI.@PropertyTag",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_ExtendedProperty.t_ExtendedFieldURI.@PropertyType",
                    "data_type": "string",
                    "example_values": [
                        "String"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_ExtendedProperty.t_Value",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_From.t_Mailbox.t_EmailAddress",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ],
                    "example_values": [
                        "test@sample.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_From.t_Mailbox.t_MailboxType",
                    "data_type": "string",
                    "example_values": [
                        "OneOff"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_From.t_Mailbox.t_Name",
                    "data_type": "string",
                    "contains": [
                        "user name"
                    ],
                    "example_values": [
                        "Test"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_From.t_Mailbox.t_RoutingType",
                    "data_type": "string",
                    "example_values": [
                        "SMTP"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_HasAttachments",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_HasBeenProcessed",
                    "data_type": "string",
                    "example_values": [
                        "true"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_IntendedFreeBusyStatus",
                    "data_type": "string",
                    "example_values": [
                        "Busy"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_InternetMessageId",
                    "data_type": "string",
                    "contains": [
                        "internet message id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_IsAssociated",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_IsDelegated",
                    "data_type": "string",
                    "example_values": [
                        "false"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_IsDeliveryReceiptRequested",
                    "data_type": "string",
                    "example_values": [
                        "false"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_IsOutOfDate",
                    "data_type": "string",
                    "example_values": [
                        "true"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_IsRead",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_IsReadReceiptRequested",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_ItemId.@ChangeKey",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_ItemId.@Id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_LastModifiedTime",
                    "data_type": "string",
                    "example_values": [
                        "2017-10-31T01:09:20Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Location",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_MeetingRequestType",
                    "data_type": "string",
                    "example_values": [
                        "NewMeetingRequest"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_MimeContent.#text",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_MimeContent.@CharacterSet",
                    "data_type": "string",
                    "example_values": [
                        "UTF-8"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Organizer.t_Mailbox.t_EmailAddress",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ],
                    "example_values": [
                        "test@sample.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Organizer.t_Mailbox.t_MailboxType",
                    "data_type": "string",
                    "example_values": [
                        "Mailbox"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Organizer.t_Mailbox.t_Name",
                    "data_type": "string",
                    "contains": [
                        "user name"
                    ],
                    "example_values": [
                        "user"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Organizer.t_Mailbox.t_RoutingType",
                    "data_type": "string",
                    "example_values": [
                        "SMTP"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_RequiredAttendees.t_Attendee.*.t_Mailbox.t_EmailAddress",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ],
                    "example_values": [
                        "test@sample.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_RequiredAttendees.t_Attendee.*.t_Mailbox.t_MailboxType",
                    "data_type": "string",
                    "example_values": [
                        "Mailbox"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_RequiredAttendees.t_Attendee.*.t_Mailbox.t_Name",
                    "data_type": "string",
                    "contains": [
                        "user name"
                    ],
                    "example_values": [
                        "user"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_RequiredAttendees.t_Attendee.*.t_Mailbox.t_RoutingType",
                    "data_type": "string",
                    "example_values": [
                        "SMTP"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_RequiredAttendees.t_Attendee.*.t_ResponseType",
                    "data_type": "string",
                    "example_values": [
                        "Unknown"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_ResponseObjects.t_AcceptItem",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_ResponseObjects.t_DeclineItem",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_ResponseObjects.t_ForwardItem",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_ResponseObjects.t_ProposeNewTime",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_ResponseObjects.t_ReplyAllToItem",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_ResponseObjects.t_ReplyToItem",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_ResponseObjects.t_TentativelyAcceptItem",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_ResponseType",
                    "data_type": "string",
                    "example_values": [
                        "NoResponseReceived"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Sender.t_Mailbox.t_EmailAddress",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ],
                    "example_values": [
                        "test@sample.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Sender.t_Mailbox.t_MailboxType",
                    "data_type": "string",
                    "example_values": [
                        "OneOff"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Sender.t_Mailbox.t_Name",
                    "data_type": "string",
                    "contains": [
                        "user name"
                    ],
                    "example_values": [
                        "Test"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Sender.t_Mailbox.t_RoutingType",
                    "data_type": "string",
                    "example_values": [
                        "SMTP"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Sensitivity",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Size",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Start",
                    "data_type": "string",
                    "example_values": [
                        "2021-11-27T16:00:00Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Subject",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_TextBody.#text",
                    "data_type": "string",
                    "example_values": [
                        "This is a test email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_TextBody.@BodyType",
                    "data_type": "string",
                    "example_values": [
                        "Text"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_TextBody.@IsTruncated",
                    "data_type": "string",
                    "example_values": [
                        "false"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_ToRecipients.t_Mailbox.*.t_EmailAddress",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ],
                    "example_values": [
                        "test@sample.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_ToRecipients.t_Mailbox.*.t_MailboxType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_ToRecipients.t_Mailbox.*.t_Name",
                    "data_type": "string",
                    "contains": [
                        "user name"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_ToRecipients.t_Mailbox.*.t_RoutingType",
                    "data_type": "string",
                    "example_values": [
                        "SMTP"
                    ]
                },
                {
                    "data_path": "action_result.summary.container_id",
                    "data_type": "numeric",
                    "contains": [
                        "phantom container id"
                    ]
                },
                {
                    "data_path": "action_result.summary.create_time",
                    "data_type": "string",
                    "column_name": "Create Time",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.summary.email_id",
                    "data_type": "numeric",
                    "contains": [
                        "exchange email id"
                    ]
                },
                {
                    "data_path": "action_result.summary.sent_time",
                    "data_type": "string",
                    "column_name": "Sent Time",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.summary.subject",
                    "data_type": "string",
                    "column_name": "Subject",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Subject: Test subject, Create time: 2018-09-04T14:12:39Z, Sent time: 2018-09-04T14:13:48Z"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "list addresses",
            "description": "Get the email addresses that make up a Distribution List",
            "verbose": "The <b>group</b> parameter supports, as input, the email (for e.g. dleng@corp.contoso.com) or the name (for e.g. dleng) of the distribution list.<br><br>The <b>recursive</b> parameter will cause the action to recursively search for distribution lists inside of the initial distribution lists and expand those.<br>Each discovered distribution list will be submitted as a separate set of results, causing multiple sets of action results to be created.",
            "type": "investigate",
            "identifier": "expand_dl",
            "read_only": true,
            "parameters": {
                "group": {
                    "description": "Distribution List to expand",
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "email",
                        "exchange distribution list",
                        "user name"
                    ],
                    "primary": true,
                    "required": true
                },
                "recursive": {
                    "description": "Expand all sub distribution lists",
                    "data_type": "boolean",
                    "order": 1
                }
            },
            "render": {
                "width": 12,
                "title": "List Addresses",
                "type": "table",
                "height": 5
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.group",
                    "data_type": "string",
                    "contains": [
                        "email",
                        "exchange distribution list",
                        "user name"
                    ],
                    "example_values": [
                        "Group"
                    ]
                },
                {
                    "data_path": "action_result.parameter.recursive",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_EmailAddress",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ],
                    "column_name": "Email",
                    "column_order": 0,
                    "example_values": [
                        "test@sample.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_MailboxType",
                    "data_type": "string",
                    "column_name": "Mailbox Type",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.data.*.t_Name",
                    "data_type": "string",
                    "contains": [
                        "user name"
                    ],
                    "column_name": "User Name",
                    "column_order": 1,
                    "example_values": [
                        "test"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_RoutingType",
                    "data_type": "string",
                    "column_name": "Routing Type",
                    "column_order": 2,
                    "example_values": [
                        "SMTP"
                    ]
                },
                {
                    "data_path": "action_result.summary.total_entries",
                    "data_type": "numeric",
                    "example_values": [
                        3
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Total entries: 3"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "lookup email",
            "description": "Resolve an Alias name or email address, into mailboxes",
            "type": "investigate",
            "identifier": "resolve_name",
            "read_only": true,
            "parameters": {
                "email": {
                    "description": "Name to resolve",
                    "data_type": "string",
                    "order": 0,
                    "primary": true,
                    "required": true,
                    "contains": [
                        "exchange alias",
                        "email"
                    ]
                }
            },
            "render": {
                "width": 12,
                "title": "Resolve Name",
                "type": "custom",
                "view": "ewsonprem_view.display_resolve_names",
                "height": 5
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.email",
                    "data_type": "string",
                    "contains": [
                        "exchange alias",
                        "email"
                    ],
                    "example_values": [
                        "test@sample.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_AssistantName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_CompanyName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_ContactSource",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_Culture",
                    "data_type": "string",
                    "example_values": [
                        "en-GB"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_Department",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_DisplayName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_EmailAddresses.*.#text",
                    "data_type": "string",
                    "example_values": [
                        "RnJvbTogUGhhbnRvbSBVc2VyIDxwaGFudG9t..."
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_EmailAddresses.*.@Key",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_GivenName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_Initials",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_JobTitle",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_Manager",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_OfficeLocation",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_PhoneNumbers.t_Entry.*.#text",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_PhoneNumbers.t_Entry.*.@Key",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_PhysicalAddresses.t_Entry.@Key",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_PhysicalAddresses.t_Entry.t_City",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_PhysicalAddresses.t_Entry.t_CountryOrRegion",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_PhysicalAddresses.t_Entry.t_PostalCode",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_PhysicalAddresses.t_Entry.t_State",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_PhysicalAddresses.t_Entry.t_Street",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_Surname",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Mailbox.t_EmailAddress",
                    "data_type": "string",
                    "example_values": [
                        "test@sample.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Mailbox.t_MailboxType",
                    "data_type": "string",
                    "example_values": [
                        "OneOff"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Mailbox.t_Name",
                    "data_type": "string",
                    "contains": [
                        "user name"
                    ],
                    "example_values": [
                        "Test"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Mailbox.t_RoutingType",
                    "data_type": "string",
                    "example_values": [
                        "SMTP"
                    ]
                },
                {
                    "data_path": "action_result.summary.total_entries",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Total entries: 1"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "update email",
            "description": "Update an email on the server",
            "verbose": "Currently this action only updates the category and subject of an email. To set multiple categories, please pass a comma separated list to the <b>category</b> parameter.<br>NOTE: If the user tries to update the categories, then the existing categories of the email will be replaced with the new categories provided as input.",
            "type": "generic",
            "identifier": "update_email",
            "read_only": false,
            "parameters": {
                "id": {
                    "description": "Message ID to update",
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "exchange email id"
                    ],
                    "primary": true,
                    "required": true
                },
                "email": {
                    "description": "Email of the mailbox owner (used during impersonation)",
                    "data_type": "string",
                    "order": 1,
                    "contains": [
                        "email"
                    ],
                    "primary": true
                },
                "subject": {
                    "description": "Subject to set",
                    "data_type": "string",
                    "order": 2
                },
                "category": {
                    "description": "Categories to set",
                    "data_type": "string",
                    "order": 3
                }
            },
            "render": {
                "width": 12,
                "title": "Update Email",
                "type": "custom",
                "view": "ewsonprem_view.update_email",
                "height": 5
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.category",
                    "data_type": "string",
                    "example_values": [
                        "Yellow, Blue, Purple, red"
                    ]
                },
                {
                    "data_path": "action_result.parameter.email",
                    "data_type": "string",
                    "example_values": [
                        "test@sample.com"
                    ],
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.parameter.id",
                    "data_type": "string",
                    "example_values": [
                        "AAMkAGIyMTUxYTkzLWRjYjctNDFjMi04NTAxLTQzMDFkNDhlZmI5MQBGAAAAAACxQSnX8n2GS4cunBIQ2sV7BwCQhMsoV7EYSJF42ChR9SCxAAAAYCbsAACQhMsoV7EYSJF42ChR9SCxAAAAjh8bAAA="
                    ],
                    "contains": [
                        "exchange email id"
                    ]
                },
                {
                    "data_path": "action_result.parameter.subject",
                    "data_type": "string",
                    "example_values": [
                        "Both value are modified"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_AdjacentMeetingCount",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_AssociatedCalendarItemId.@ChangeKey",
                    "data_type": "string",
                    "example_values": [
                        "DwAAABYAAAAcmY5GSia4RK5DAQM4jsrZAAGp9bBK"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_AssociatedCalendarItemId.@Id",
                    "data_type": "string",
                    "example_values": [
                        "AAMkADMzMGJmYzM0LThjZjYtNDQzMC04ZjNhLWNkYzYwYmViZDU2ZABGAAAAAAAYish+ZMlDQ6wcIrPHA5WYBwAcmY5GSia4RK5DAQM4jsrZAAAAAAENAAAcmY5GSia4RK5DAQM4jsrZAAGp8gO+AAA="
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_FileAttachment.t_AttachmentId.@Id",
                    "data_type": "string",
                    "example_values": [
                        "AAMkAGIyMTUxYTkzLWRjYjctNDFjMi04NTAxLTQzMDFkNDhlZmI5MQBGAAAAAACxQSnX8n2GS4cunBIQ2sV7BwCQhMsoV7EYSJF42ChR9SCxAAAAYCbsAACQhMsoV7EYSJF42ChR9SCxAAAAjh8bAAABEgAQAHAXDtZM8ItNnDTtvcd6IAo="
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_FileAttachment.t_ContentId",
                    "data_type": "string",
                    "example_values": [
                        "7518226202D21C4397EE1CB1E2E540C7@sample.com"
                    ],
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_FileAttachment.t_ContentType",
                    "data_type": "string",
                    "example_values": [
                        "application/octet-stream"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_FileAttachment.t_IsContactPhoto",
                    "data_type": "string",
                    "example_values": [
                        "false"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_FileAttachment.t_IsInline",
                    "data_type": "string",
                    "example_values": [
                        "false"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_FileAttachment.t_LastModifiedTime",
                    "data_type": "string",
                    "example_values": [
                        "2017-10-03T21:31:05"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_FileAttachment.t_Name",
                    "data_type": "string",
                    "contains": [
                        "user name"
                    ],
                    "example_values": [
                        "test.msg"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_FileAttachment.t_Size",
                    "data_type": "string",
                    "example_values": [
                        "55360"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Body.#text",
                    "data_type": "string",
                    "example_values": [
                        "Attached .msg file. Hello"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Body.@BodyType",
                    "data_type": "string",
                    "example_values": [
                        "Text"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Body.@IsTruncated",
                    "data_type": "string",
                    "example_values": [
                        "false"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Categories",
                    "data_type": "string",
                    "example_values": [
                        "red"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_ConflictingMeetingCount",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_DateTimeCreated",
                    "data_type": "string",
                    "example_values": [
                        "2017-10-05T20:19:58Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_DateTimeReceived",
                    "data_type": "string",
                    "example_values": [
                        "2017-10-03T21:31:05Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_DateTimeSent",
                    "data_type": "string",
                    "example_values": [
                        "2017-10-03T21:31:20Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_End",
                    "data_type": "string",
                    "example_values": [
                        "2021-12-02T13:30:00Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_ExtendedProperty.t_ExtendedFieldURI.@PropertyTag",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_ExtendedProperty.t_ExtendedFieldURI.@PropertyType",
                    "data_type": "string",
                    "example_values": [
                        "String"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_ExtendedProperty.t_Value",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_From.t_Mailbox.t_EmailAddress",
                    "data_type": "string",
                    "example_values": [
                        "test@sample.com"
                    ],
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_From.t_Mailbox.t_MailboxType",
                    "data_type": "string",
                    "example_values": [
                        "OneOff"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_From.t_Mailbox.t_Name",
                    "data_type": "string",
                    "contains": [
                        "user name"
                    ],
                    "example_values": [
                        "Test"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_From.t_Mailbox.t_RoutingType",
                    "data_type": "string",
                    "example_values": [
                        "SMTP"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_HasAttachments",
                    "data_type": "string",
                    "example_values": [
                        "true"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_HasBeenProcessed",
                    "data_type": "string",
                    "example_values": [
                        "true"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_IntendedFreeBusyStatus",
                    "data_type": "string",
                    "example_values": [
                        "Busy"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_InternetMessageId",
                    "data_type": "string",
                    "example_values": [
                        "<81c761fe-caa8-f924-f65d-079382c1ad0b@sample.com>"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_IsAssociated",
                    "data_type": "string",
                    "example_values": [
                        "false"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_IsDelegated",
                    "data_type": "string",
                    "example_values": [
                        "false"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_IsDeliveryReceiptRequested",
                    "data_type": "string",
                    "example_values": [
                        "false"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_IsOutOfDate",
                    "data_type": "string",
                    "example_values": [
                        "false"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_IsRead",
                    "data_type": "string",
                    "example_values": [
                        "true"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_IsReadReceiptRequested",
                    "data_type": "string",
                    "example_values": [
                        "false"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_ItemId.@ChangeKey",
                    "data_type": "string",
                    "example_values": [
                        "CQAAABYAAACQhMsoV7EYSJF42ChR9SCxAAAAj9UU"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_ItemId.@Id",
                    "data_type": "string",
                    "example_values": [
                        "AAMkAGIyMTUxYTkzLWRjYjctNDFjMi04NTAxLTQzMDFkNDhlZmI5MQBGAAAAAACxQSnX8n2GS4cunBIQ2sV7BwCQhMsoV7EYSJF42ChR9SCxAAAAYCbsAACQhMsoV7EYSJF42ChR9SCxAAAAjh8bAAA="
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_LastModifiedTime",
                    "data_type": "string",
                    "example_values": [
                        "2017-10-31T01:09:20Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Location",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_MeetingRequestType",
                    "data_type": "string",
                    "example_values": [
                        "NewMeetingRequest"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_MimeContent.#text",
                    "data_type": "string",
                    "example_values": [
                        "RnJvbTogUGhhbnRvbSBVc2VyIDxwaGFudG9t..."
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_MimeContent.@CharacterSet",
                    "data_type": "string",
                    "example_values": [
                        "UTF-8"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Organizer.t_Mailbox.t_EmailAddress",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ],
                    "example_values": [
                        "test@sample.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Organizer.t_Mailbox.t_MailboxType",
                    "data_type": "string",
                    "example_values": [
                        "Mailbox"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Organizer.t_Mailbox.t_Name",
                    "data_type": "string",
                    "contains": [
                        "user name"
                    ],
                    "example_values": [
                        "user"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Organizer.t_Mailbox.t_RoutingType",
                    "data_type": "string",
                    "example_values": [
                        "SMTP"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_RequiredAttendees.t_Attendee.*.t_Mailbox.t_EmailAddress",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ],
                    "example_values": [
                        "test@sample.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_RequiredAttendees.t_Attendee.*.t_Mailbox.t_MailboxType",
                    "data_type": "string",
                    "example_values": [
                        "Mailbox"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_RequiredAttendees.t_Attendee.*.t_Mailbox.t_Name",
                    "data_type": "string",
                    "contains": [
                        "user name"
                    ],
                    "example_values": [
                        "user"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_RequiredAttendees.t_Attendee.*.t_Mailbox.t_RoutingType",
                    "data_type": "string",
                    "example_values": [
                        "SMTP"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_RequiredAttendees.t_Attendee.*.t_ResponseType",
                    "data_type": "string",
                    "example_values": [
                        "Unknown"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_ResponseObjects.t_AcceptItem",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_ResponseObjects.t_DeclineItem",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_ResponseObjects.t_ForwardItem",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_ResponseObjects.t_ProposeNewTime",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_ResponseObjects.t_ReplyAllToItem",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_ResponseObjects.t_ReplyToItem",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_ResponseObjects.t_TentativelyAcceptItem",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_ResponseType",
                    "data_type": "string",
                    "example_values": [
                        "NoResponseReceived"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Sender.t_Mailbox.t_EmailAddress",
                    "data_type": "string",
                    "example_values": [
                        "test@sample.com"
                    ],
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Sender.t_Mailbox.t_MailboxType",
                    "data_type": "string",
                    "example_values": [
                        "OneOff"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Sender.t_Mailbox.t_Name",
                    "data_type": "string",
                    "contains": [
                        "user name"
                    ],
                    "example_values": [
                        "Test"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Sender.t_Mailbox.t_RoutingType",
                    "data_type": "string",
                    "example_values": [
                        "SMTP"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Sensitivity",
                    "data_type": "string",
                    "example_values": [
                        "Normal"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Size",
                    "data_type": "string",
                    "example_values": [
                        "56353"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Start",
                    "data_type": "string",
                    "example_values": [
                        "2021-12-02T12:30:00Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Subject",
                    "data_type": "string",
                    "example_values": [
                        "Both value are modified"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_TextBody.#text",
                    "data_type": "string",
                    "example_values": [
                        "Test body."
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_TextBody.@BodyType",
                    "data_type": "string",
                    "example_values": [
                        "Text"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_TextBody.@IsTruncated",
                    "data_type": "string",
                    "example_values": [
                        "false"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_ToRecipients.t_Mailbox.*.t_EmailAddress",
                    "data_type": "string",
                    "example_values": [
                        "test@sample.com"
                    ],
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_ToRecipients.t_Mailbox.*.t_MailboxType",
                    "data_type": "string",
                    "example_values": [
                        "Mailbox"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_ToRecipients.t_Mailbox.*.t_Name",
                    "data_type": "string",
                    "contains": [
                        "user name"
                    ],
                    "example_values": [
                        "Test User"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_ToRecipients.t_Mailbox.*.t_RoutingType",
                    "data_type": "string",
                    "example_values": [
                        "SMTP"
                    ]
                },
                {
                    "data_path": "action_result.summary.create_time",
                    "data_type": "string",
                    "example_values": [
                        "2017-10-05T20:19:58Z"
                    ]
                },
                {
                    "data_path": "action_result.summary.sent_time",
                    "data_type": "string",
                    "example_values": [
                        "2017-10-03T21:31:20Z"
                    ]
                },
                {
                    "data_path": "action_result.summary.subject",
                    "data_type": "string",
                    "example_values": [
                        "Both value are modified"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Create time: 2017-10-05T20:19:58Z\nSubject: Both value are modified\nSent time: 2017-10-03T21:31:20Z"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "on poll",
            "description": "Ingest emails from the server into Splunk SOAR",
            "verbose": "Please see sections <a href=\"#poll_now\">POLL NOW</a> and <a href=\"#scheduled_polling\">Scheduled Polling</a> for more info on how this action is implemented by the app.",
            "type": "ingest",
            "identifier": "on_poll",
            "read_only": true,
            "parameters": {
                "start_time": {
                    "data_type": "numeric",
                    "description": "Parameter Ignored in this app"
                },
                "end_time": {
                    "data_type": "numeric",
                    "description": "Parameter Ignored in this app"
                },
                "container_id": {
                    "data_type": "numeric",
                    "description": "Parameter Ignored in this app"
                },
                "container_count": {
                    "data_type": "numeric",
                    "description": "Maximum number of emails to ingest",
                    "required": true,
                    "default": 100
                },
                "artifact_count": {
                    "data_type": "numeric",
                    "description": "Parameter Ignored in this app",
                    "default": 1000
                }
            },
            "output": [],
            "versions": "EQ(*)"
        }
    ],
    "pip39_dependencies": {
        "wheel": [
            {
                "module": "cffi",
                "input_file": "wheels/py39/cffi-2.0.0-cp39-cp39-manylinux2014_x86_64.manylinux_2_17_x86_64.manylinux_2_28_x86_64.whl"
            },
            {
                "module": "cryptography",
                "input_file": "wheels/py3/cryptography-46.0.1-cp38-abi3-manylinux_2_28_x86_64.whl"
            },
            {
                "module": "lxml",
                "input_file": "wheels/py39/lxml-6.0.1-cp39-cp39-manylinux_2_26_x86_64.manylinux_2_28_x86_64.whl"
            },
            {
                "module": "pycparser",
                "input_file": "wheels/py3/pycparser-2.23-py3-none-any.whl"
            },
            {
                "module": "pyspnego",
                "input_file": "wheels/py3/pyspnego-0.12.0-py3-none-any.whl"
            },
            {
                "module": "requests_ntlm",
                "input_file": "wheels/py3/requests_ntlm-1.3.0-py3-none-any.whl"
            },
            {
                "module": "typing_extensions",
                "input_file": "wheels/py3/typing_extensions-4.15.0-py3-none-any.whl"
            }
        ]
    },
    "pip313_dependencies": {
        "wheel": [
            {
                "module": "cffi",
                "input_file": "wheels/py313/cffi-2.0.0-cp313-cp313-manylinux2014_x86_64.manylinux_2_17_x86_64.manylinux_2_28_x86_64.whl"
            },
            {
                "module": "cryptography",
                "input_file": "wheels/py3/cryptography-46.0.1-cp311-abi3-manylinux_2_28_x86_64.whl"
            },
            {
                "module": "lxml",
                "input_file": "wheels/py313/lxml-6.0.1-cp313-cp313-manylinux_2_26_x86_64.manylinux_2_28_x86_64.whl"
            },
            {
                "module": "pycparser",
                "input_file": "wheels/py3/pycparser-2.23-py3-none-any.whl"
            },
            {
                "module": "pyspnego",
                "input_file": "wheels/py3/pyspnego-0.12.0-py3-none-any.whl"
            },
            {
                "module": "requests_ntlm",
                "input_file": "wheels/py3/requests_ntlm-1.3.0-py3-none-any.whl"
            }
        ]
    }
}
